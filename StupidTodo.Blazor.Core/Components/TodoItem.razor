<div class="col-12 alert alert-primary" role="alert">
    @if (IsEdit)
    {
        <button @onclick="@(() => SaveAction(Todo.Id, Description, Todo.Done))" disabled="@TodosState.Busy" class="btn btn-sm btn-success">
            @if (TodosState.Busy)
            {
                <i class="fas fa-cog fa-spin"></i>                }
            else
            {
                <i class="fas fa-save"></i>
            }
        </button>
        <button @onclick="@(() => SetEditMode(false))" disabled="@TodosState.Busy" class="btn btn-sm btn-secondary"><i class="fas fa-undo"></i></button>
        @:&nbsp;&nbsp;&nbsp;
        <InputText @bind-Value="@Description" type="text" autocomplete="off" />
    }
    else
    {
        <button @onclick="@(() => SaveAction(Todo.Id, Description, true))" disabled="@TodosState.Busy" class="btn btn-sm btn-primary">
            @if (TodosState.Busy)
            {
                <i class="fas fa-cog fa-spin"></i>                }
            else
            {
                <i class="fas fa-check"></i>
            }
        </button>
        <button @onclick="@(() => SetEditMode(true))" disabled="@TodosState.Busy" class="btn btn-sm btn-secondary" ><i class="fas fa-pencil-alt"></i></button>
        @:&nbsp;&nbsp;&nbsp;
        @Todo.Description
    }
</div>

@code {
    [Parameter]
    public Action<string, string, bool> SaveAction { get; set; } = default!;

    [Parameter]
    public ITodo Todo { get; set; } = default!;

    [Parameter]
    public TodosState TodosState { get; set; } = default!;

    private string Description { get; set; } = string.Empty;

    public bool IsEdit { get; set; }

    public void SetEditMode(bool isEdit)
    {
        IsEdit = isEdit;
        Description = IsEdit ? Todo.Description : string.Empty;
    }
}
